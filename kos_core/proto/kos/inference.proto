syntax = "proto3";

package kos.inference;

import "google/protobuf/empty.proto";
import "kos/common.proto";

option go_package = "kos/inference;inference";
option java_package = "com.kos.inference";
option csharp_namespace = "KOS.Inference";

// The InferenceService allows uploading models and running inference.
service InferenceService {
    // Uploads a model to the robot.
    rpc UploadModel(UploadModelRequest) returns (UploadModelResponse);

    // Get all available models
    rpc GetModelsInfo(GetModelsInfoRequest) returns (GetModelsInfoResponse);

    // Runs inference using a specified model.
    rpc Forward(ForwardRequest) returns (ForwardResponse);
}

// Request message for uploading a model.
message UploadModelRequest {
    bytes model = 1; // Model binary data
    optional ModelMetadata metadata = 2; // Model metadata
}

// Response message containing the uploaded model's UID.
message UploadModelResponse {
    string model_uid = 1;           // Unique identifier for the model
    kos.common.Error error = 2; // Error details if upload failed
}

// Request message for getting all available models
message GetModelsInfoRequest {
    oneof filter {
        ModelUids model_uids = 1; // List of specific model UIDs to fetch
        bool all = 2;             // If true, return all models
    }
}

// List of model UIDs
message ModelUids {
    repeated string uids = 1;
}

// Response message containing all available models
message GetModelsInfoResponse {
    repeated ModelInfo models = 1; // List of model information
    kos.common.Error error = 2; // Error details if fetching failed
}

// Model metadata
message ModelMetadata {
    optional string model_name = 1; // Model name
    optional string model_description = 2; // Model description
    optional string model_version = 3; // Model version
    optional string model_author = 4; // Model author
}

// Information about a model
message ModelInfo {
    string uid = 1; // Model UID (assigned by server)
    optional ModelMetadata metadata = 2; // Model metadata
}

// Request message for running inference.
message ForwardRequest {
    string model_uid = 1;        // Model UID to use for inference
    repeated float inputs = 2;   // Input data for the model
}

// Response message containing inference results.
message ForwardResponse {
    repeated float outputs = 1;        // Output data from the model
    kos.common.Error error = 2;   // Error details if inference failed
}

message ModelMetadata {
    optional string model_name = 1; // Model name
    optional string model_description = 2; // Model description
    optional string model_version = 3; // Model version
    optional string model_author = 4; // Model author
}
